<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZipImageViewer">
    <local:RectConverter x:Key="RectConverter"/>
    
    <!--rounded content control base-->
    <Style x:Key="ContentControlBaseStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="2"/>
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true" 
                            CornerRadius="3">
                        <Border.Clip>
                            <RectangleGeometry RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=CornerRadius.TopLeft}"
                                               RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=CornerRadius.BottomRight}">
                                <RectangleGeometry.Rect>
                                    <MultiBinding Converter="{StaticResource RectConverter}" ConverterParameter="0 0">
                                        <Binding RelativeSource="{RelativeSource AncestorType=Border}" Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Border}" Path="ActualHeight"/>
                                    </MultiBinding>
                                </RectangleGeometry.Rect>
                            </RectangleGeometry>
                        </Border.Clip>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--system buttons-->
    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="Chrome"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <!--<Setter Property="FontSize" Value="13.333" />-->
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Margin" Value="0,2,3,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!--borderless window-->
    <Style TargetType="local:BorderlessWindow">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BorderlessWindow">
                    <Grid Background="{TemplateBinding Background}">
                        <!--window title-->
                        <TextBlock Margin="10" Text="{TemplateBinding Title}" Foreground="{TemplateBinding Foreground}"
                                   FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                        <!--the close button-->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Button x:Name="minimizeButton" Style="{StaticResource WindowButtonStyle}" Content="0" Visibility="Collapsed" Margin="0,10,10,10"/>
                            <Button x:Name="restoreButton" Style="{StaticResource WindowButtonStyle}" Content="1" Visibility="Collapsed" Margin="0,10,10,10"/>
                            <Button x:Name="closeButton" Style="{StaticResource WindowButtonStyle}" Content="r" Visibility="Collapsed" Margin="0,10,10,10"/>
                        </StackPanel>

                        <!--the real content-->
                        <ContentPresenter x:Name="WindowContent" Margin="10" Content="{TemplateBinding Content}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonCloseVisible" Value="True">
                            <Setter TargetName="closeButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="WindowContent" Property="Margin" Value="5,30,5,5"/>
                        </Trigger>
                        <Trigger Property="ButtonMaxVisible" Value="True">
                            <Setter TargetName="restoreButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="WindowContent" Property="Margin" Value="5,30,5,5"/>
                        </Trigger>
                        <Trigger Property="ButtonMinVisible" Value="True">
                            <Setter TargetName="minimizeButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="WindowContent" Property="Margin" Value="5,30,5,5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

</ResourceDictionary>