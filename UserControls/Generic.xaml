<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZipImageViewer"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--rounded content control base-->
    <Style x:Key="RoundContentControlBaseStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="border" CornerRadius="3" UseLayoutRounding="True"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Border.Clip>
                            <RectangleGeometry RadiusX="3" RadiusY="3">
                                <RectangleGeometry.Rect>
                                    <MultiBinding Converter="{StaticResource RectConverter}" ConverterParameter="0 0">
                                        <Binding RelativeSource="{RelativeSource AncestorType=Border}" Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Border}" Path="ActualHeight"/>
                                    </MultiBinding>
                                </RectangleGeometry.Rect>
                            </RectangleGeometry>
                        </Border.Clip>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundHighlightBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ForegroundGrayBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--control styles-->
    <Style x:Key="TipTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Padding" Value="0 2"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Justify"/>
    </Style>
    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 0 0 8"/>
    </Style>
    <Style x:Key="BorderBlockStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource S_DropShadow}">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Margin" Value="8 4"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="CornerRadius" Value="4"/>
    </Style>
    <Style x:Key="BorderlessStyle" TargetType="Control">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="4"/>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundContentControlBaseStyle}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource BackgroundHighlightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--system buttons-->
    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="Chrome"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <!--<Setter Property="FontSize" Value="13.333" />-->
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Margin" Value="0,2,3,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--slide switch-->
    <Style x:Key="SlideSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="checked">
                            <DoubleAnimation Storyboard.TargetName="slider" Storyboard.TargetProperty="Tag" Duration="0:0:0.2">
                                <DoubleAnimation.To>
                                    <sys:Double>1</sys:Double>
                                </DoubleAnimation.To>
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="text_on" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
                            <DoubleAnimation Storyboard.TargetName="text_off" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="unchecked">
                            <DoubleAnimation Storyboard.TargetName="slider" Storyboard.TargetProperty="Tag" Duration="0:0:0.2">
                                <DoubleAnimation.To>
                                    <sys:Double>-1</sys:Double>
                                </DoubleAnimation.To>
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="text_on" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0"/>
                            <DoubleAnimation Storyboard.TargetName="text_off" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" VerticalAlignment="Center"/>
                        <Grid x:Name="grid" MinWidth="40" MinHeight="20" Margin="4 0 0 0" UseLayoutRounding="False">
                            <Grid.Clip>
                                <RectangleGeometry RadiusX="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.5*x', Mode=OneWay}"
                                                   RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="0,0,x,y">
                                            <Binding ElementName="grid" Path="ActualWidth"/>
                                            <Binding ElementName="grid" Path="ActualHeight"/>
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Grid.Clip>

                            <Rectangle x:Name="back" Fill="{TemplateBinding Background}"
                                       RadiusX="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.5*x', Mode=OneWay}"
                                       RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                            </Rectangle>

                            <TextBlock x:Name="text_on" Text="ON" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="SemiBold"
                                       FontSize="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='x == 0 ? 8 : x*0.3', Mode=OneWay}">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform>
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="x*(y-z)/2-(y-z)" Mode="OneWay">
                                                <Binding ElementName="slider" Path="Tag"/>
                                                <Binding ElementName="grid" Path="ActualWidth"/>
                                                <Binding ElementName="grid" Path="ActualHeight"/>
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>

                            <TextBlock x:Name="text_off" Text="OFF" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="SemiBold"
                                       FontSize="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='x == 0 ? 8 : x*0.3', Mode=OneWay}">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform>
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="x*(y-z)/2+(y-z)" Mode="OneWay">
                                                <Binding ElementName="slider" Path="Tag"/>
                                                <Binding ElementName="grid" Path="ActualWidth"/>
                                                <Binding ElementName="grid" Path="ActualHeight"/>
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>

                            <Ellipse x:Name="slider" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     Height="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.75*x', Mode=OneWay}"
                                     Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                <Ellipse.Tag>
                                    <sys:Double>-1</sys:Double>
                                </Ellipse.Tag>
                                <Ellipse.RenderTransform>
                                    <TranslateTransform>
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="x*(y-z)/2" Mode="OneWay">
                                                <Binding ElementName="slider" Path="Tag"/>
                                                <Binding ElementName="grid" Path="ActualWidth"/>
                                                <Binding ElementName="grid" Path="ActualHeight"/>
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </Ellipse.RenderTransform>
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                                      BlurRadius="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.2*x', Mode=OneWay}"/>
                                </Ellipse.Effect>
                            </Ellipse>

                            <Rectangle x:Name="back_shadow" Stroke="{StaticResource BackgroundLightBrush}"
                                       StrokeThickness="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.2*x', Mode=OneWay}"
                                       Margin="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='-0.2*x', Mode=OneWay}"
                                       RadiusX="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.5*x', Mode=OneWay}"
                                       RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                <Rectangle.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                                      BlurRadius="{Binding ActualHeight, ElementName=grid, Converter={StaticResource MathConverter}, ConverterParameter='0.35*x', Mode=OneWay}"/>
                                </Rectangle.Effect>
                            </Rectangle>
                        </Grid>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource checked}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource unchecked}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--tooltip style-->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="TextBlock.FontSize" Value="12" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4" UseLayoutRounding="True"
                            Margin="10" Effect="{StaticResource DS_Below}">
                        <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>