<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZipImageViewer">
    <local:RectConverter x:Key="RectConverter"/>
    
    <!--rounded content control base-->
    <Style x:Key="ContentControlBaseStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="2"/>
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true" 
                            CornerRadius="3">
                        <Border.Clip>
                            <RectangleGeometry RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=CornerRadius.TopLeft}"
                                               RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=CornerRadius.BottomRight}">
                                <RectangleGeometry.Rect>
                                    <MultiBinding Converter="{StaticResource RectConverter}" ConverterParameter="0 0">
                                        <Binding RelativeSource="{RelativeSource AncestorType=Border}" Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Border}" Path="ActualHeight"/>
                                    </MultiBinding>
                                </RectangleGeometry.Rect>
                            </RectangleGeometry>
                        </Border.Clip>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>